// This file is auto-generated by @hey-api/openapi-ts

export type CategoryDto = {
    id?: number;
    parentId?: number | null;
    name: string;
    slug?: string | null;
};

export type CategoryTreeResponse = {
    id?: number;
    parentId?: number | null;
    name: string;
    children?: Array<CategoryTreeResponse>;
};

export type CreateCategory = {
    name: string;
    parentId: number | null;
    slug: string | null;
};

export type CreateItem = {
    name: string;
    categoryId: number;
    storageId: number;
    slug: string | null;
};

export type CreateStorage = {
    name: string;
    storageTypeId: number;
    slug: string | null;
    parentId: number | null;
};

export type CreateStorageType = {
    name: string;
};

export type _Error = {
    code: string;
    message: string;
};

export type ErrorResponse = {
    errors: Array<_Error>;
};

export type ItemListEntry = {
    id?: number;
    name: string;
    slug?: string | null;
    quantityType?: QuantityType;
    quantity?: number | null;
    level?: NullableOfQuantityLevel;
};

export type NotFoundResponse = {
    missingEntity: string;
};

export type NullableOfQuantityLevel = number | null;

export type QuantityType = number;

export type RenameCategory = {
    name: string;
    id: number;
};

export type StorageItemsResponse = {
    id?: number;
    name: string;
    type: StorageType;
    childStorages?: Array<StorageListEntry>;
    items?: Array<ItemListEntry>;
};

export type StorageListEntry = {
    id?: number;
    name: string;
    slug?: string | null;
    type: StorageType;
};

export type StorageTreeResponse = {
    id?: number;
    parentId?: number | null;
    name: string;
    children?: Array<StorageTreeResponse>;
};

export type StorageType = {
    id?: number;
    name: string;
};

export type GetCategoryTreeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/categories';
};

export type GetCategoryTreeErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type GetCategoryTreeError = GetCategoryTreeErrors[keyof GetCategoryTreeErrors];

export type GetCategoryTreeResponses = {
    /**
     * OK
     */
    200: Array<CategoryTreeResponse>;
};

export type GetCategoryTreeResponse = GetCategoryTreeResponses[keyof GetCategoryTreeResponses];

export type CreateCategoryData = {
    body?: CreateCategory;
    path?: never;
    query?: never;
    url: '/api/categories';
};

export type CreateCategoryErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type CreateCategoryError = CreateCategoryErrors[keyof CreateCategoryErrors];

export type CreateCategoryResponses = {
    /**
     * OK
     */
    200: number;
};

export type CreateCategoryResponse = CreateCategoryResponses[keyof CreateCategoryResponses];

export type DeleteCategoryData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/categories/{id}';
};

export type DeleteCategoryErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type DeleteCategoryError = DeleteCategoryErrors[keyof DeleteCategoryErrors];

export type DeleteCategoryResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetCategoryData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/categories/{id}';
};

export type GetCategoryErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type GetCategoryError = GetCategoryErrors[keyof GetCategoryErrors];

export type GetCategoryResponses = {
    /**
     * OK
     */
    200: CategoryDto;
};

export type GetCategoryResponse = GetCategoryResponses[keyof GetCategoryResponses];

export type RenameCategoryData = {
    body: RenameCategory;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/categories/{id}';
};

export type RenameCategoryErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type RenameCategoryError = RenameCategoryErrors[keyof RenameCategoryErrors];

export type RenameCategoryResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type SetCategoryParentData = {
    body?: never;
    path: {
        id: number;
        parentId: number;
    };
    query?: never;
    url: '/api/categories/{id}/setParent/{parentId}';
};

export type SetCategoryParentErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type SetCategoryParentError = SetCategoryParentErrors[keyof SetCategoryParentErrors];

export type SetCategoryParentResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetStorageTypesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/storageTypes';
};

export type GetStorageTypesErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type GetStorageTypesError = GetStorageTypesErrors[keyof GetStorageTypesErrors];

export type GetStorageTypesResponses = {
    /**
     * OK
     */
    200: Array<StorageType>;
};

export type GetStorageTypesResponse = GetStorageTypesResponses[keyof GetStorageTypesResponses];

export type CreateStorageTypeData = {
    body?: CreateStorageType;
    path?: never;
    query?: never;
    url: '/api/storageTypes';
};

export type CreateStorageTypeErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type CreateStorageTypeError = CreateStorageTypeErrors[keyof CreateStorageTypeErrors];

export type CreateStorageTypeResponses = {
    /**
     * OK
     */
    200: number;
};

export type CreateStorageTypeResponse = CreateStorageTypeResponses[keyof CreateStorageTypeResponses];

export type GetStoragesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/storages';
};

export type GetStoragesErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type GetStoragesError = GetStoragesErrors[keyof GetStoragesErrors];

export type GetStoragesResponses = {
    /**
     * OK
     */
    200: Array<StorageTreeResponse>;
};

export type GetStoragesResponse = GetStoragesResponses[keyof GetStoragesResponses];

export type CreateStorageData = {
    body?: CreateStorage;
    path?: never;
    query?: never;
    url: '/api/storages';
};

export type CreateStorageErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type CreateStorageError = CreateStorageErrors[keyof CreateStorageErrors];

export type CreateStorageResponses = {
    /**
     * OK
     */
    200: number;
};

export type CreateStorageResponse = CreateStorageResponses[keyof CreateStorageResponses];

export type GetRootStorageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/storages/root';
};

export type GetRootStorageErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type GetRootStorageError = GetRootStorageErrors[keyof GetRootStorageErrors];

export type GetRootStorageResponses = {
    /**
     * OK
     */
    200: Array<StorageListEntry>;
};

export type GetRootStorageResponse = GetRootStorageResponses[keyof GetRootStorageResponses];

export type GetStorageData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/storages/{id}';
};

export type GetStorageErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type GetStorageError = GetStorageErrors[keyof GetStorageErrors];

export type GetStorageResponses = {
    /**
     * OK
     */
    200: StorageItemsResponse;
};

export type GetStorageResponse = GetStorageResponses[keyof GetStorageResponses];

export type GetStorageBySlugData = {
    body?: never;
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/storages/slug/{slug}';
};

export type GetStorageBySlugErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type GetStorageBySlugError = GetStorageBySlugErrors[keyof GetStorageBySlugErrors];

export type GetStorageBySlugResponses = {
    /**
     * OK
     */
    200: StorageItemsResponse;
};

export type GetStorageBySlugResponse = GetStorageBySlugResponses[keyof GetStorageBySlugResponses];

export type CreateItemData = {
    body?: CreateItem;
    path?: never;
    query?: never;
    url: '/api/items';
};

export type CreateItemErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: NotFoundResponse;
};

export type CreateItemError = CreateItemErrors[keyof CreateItemErrors];

export type CreateItemResponses = {
    /**
     * OK
     */
    200: number;
};

export type CreateItemResponse = CreateItemResponses[keyof CreateItemResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:5231' | (string & {});
};